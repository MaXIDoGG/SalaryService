"""Init

Revision ID: 1bbe8061bb80
Revises: 
Create Date: 2025-06-20 00:26:58.747888

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1bbe8061bb80'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coefficients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parameter', postgresql.ENUM('FIRST_RESPONSE_TIME', 'NEXT_RESPONSE_TIME', 'POLITENESS_RATING', 'COMPETENCE_RATING', name='parametertype'), nullable=False),
    sa.Column('type', postgresql.ENUM('POSITIVE', 'NEGATIVE', name='coefficienttype'), nullable=False),
    sa.Column('norm', sa.Float(), nullable=False),
    sa.Column('base', sa.Float(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('position', sa.Enum('HEAD', 'SUPER_OPERATOR', 'SENIOR_OPERATOR', 'OPERATOR', name='positiontype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calcsalarys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parameter', postgresql.ENUM('FIRST_RESPONSE_TIME', 'NEXT_RESPONSE_TIME', 'POLITENESS_RATING', 'COMPETENCE_RATING', name='parametertype'), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shifts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timeouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('parameter', postgresql.ENUM('FIRST_RESPONSE_TIME', 'NEXT_RESPONSE_TIME', 'POLITENESS_RATING', 'COMPETENCE_RATING', name='parametertype'), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('shift_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stats')
    op.drop_table('timeouts')
    op.drop_table('shifts')
    op.drop_table('calcsalarys')
    op.drop_table('employees')
    op.drop_table('coefficients')
    # ### end Alembic commands ###
